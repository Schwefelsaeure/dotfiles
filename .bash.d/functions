# Functions

# 
# Echo all defined aliases.
#
# Usage:
#
#   echo_aliases
#
function echo_aliases()
{
	echo "Aliases:"
	echo -n "  "
	
	for alias in $(compgen -a)
	do
	  echo -n "${alias} "
	done
	
	echo ""
}

#
# Set bash prompt PS1
#
# PS1 is made of:
# - the Python virtual environment: (environment_name)
# - a prefix: user@hostname:/my/path (this notation can be directly used for scp)
# - the git status: configured with __git_ps1() method from git-prompt.sh
# - a suffix: usually the prompt sign ("$" or "#")
#
# Usage:
#
#   set_bash_prompt()
#
# Note: this exports the PS1 variable.
#
set_bash_prompt()
{
    local exit_status_last_command="${?}"

    local python_virtualenv=""
    local ps1_prefix=""
    local ps1_suffix=""

    local supported_terminal_colors=$(tput colors 2>/dev/null)

    if [[ ${supported_terminal_colors} -gt 2 ]]; then
        export GIT_PS1_SHOWCOLORHINTS=1

        # Wrap the color codes between \[ and \], so that bash counts the
        # correct number of characters for line wrapping.
        local Red='\[\e[0;31m\]'; local BRed='\[\e[1;31m\]'
        local Gre='\[\e[0;32m\]'; local BGre='\[\e[1;32m\]'
        local Yel='\[\e[0;33m\]'; local BYel='\[\e[1;33m\]'
        local Blu='\[\e[0;34m\]'; local BBlu='\[\e[1;34m\]'
        local Mag='\[\e[0;35m\]'; local BMag='\[\e[1;35m\]'
        local Cya='\[\e[0;36m\]'; local BCya='\[\e[1;36m\]'
        local Whi='\[\e[0;37m\]'; local BWhi='\[\e[1;37m\]'
        local Reset='\[\e[0m\]'
    else # No color
        unset GIT_PS1_SHOWCOLORHINTS
        
        local Red=''; local BRed=''
        local Gre=''; local BGre=''
        local Yel=''; local BYel=''
        local Blu=''; local BBlu=''
        local Mag=''; local BMag=''
        local Cya=''; local BCya=''
        local Whi=''; local BWhi=''
        local Reset=''
    fi

    if [[ -v VIRTUAL_ENV ]]; then
        python_virtualenv="${BYel}($(basename ${VIRTUAL_ENV}))${Reset} "
    fi

    # Set "user@hostname:".
    ps1_prefix+="${BRed}\u${Reset}@${Cya}\h${Reset}:"
    # Set working directory.
    ps1_prefix+="${BBlu}\w${Reset} "

    if [[ ${exit_status_last_command} != 0 ]]; then
        ps1_suffix="${Red}[${exit_status_last_command}]"
    fi

    # If the effective UID is 0, a #, otherwise a $.
    ps1_suffix+="${BRed}\\$ ${Reset}"

    # Call "__git_ps1()" to evaluate git branch and set "${PS1}".
    __git_ps1 "${python_virtualenv}${ps1_prefix}" "${ps1_suffix}" "(%s)"

    # echo "Debug: \$PS1=$PS1"
}
